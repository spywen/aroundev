/**
 * Created by laurent on 18/10/2014.
 */
'use strict';

angular.module('aroundev', [
    'ngRoute',
    'ngAnimate',
    'aroundev.translate',
    'aroundev.menu',
    'aroundev.index',
    'aroundev.user'
]).config(["$routeProvider", "$translateProvider", "$locationProvider", function($routeProvider, $translateProvider, $locationProvider){
    //Routing
    $routeProvider.
        when('/', {
            templateUrl: '/app/js/index/html/index.html',
            controller: 'indexCtrl'
        })
        .when('/login', {
            templateUrl: '/app/js/user/html/login.html',
            controller: 'userCtrl'
        });
    $locationProvider.html5Mode(true);//Remove the '#' on the url

    //Translate
    $translateProvider.useStaticFilesLoader({
        prefix: '/app/js/languages/json/',
        suffix: '.json'
    });
    $translateProvider.useCookieStorage();
    $translateProvider.preferredLanguage('en');
}]);
/**
 * Created by laurent on 19/10/2014.
 */
angular.module('aroundev.index', [
]).controller('indexCtrl', ["$scope", function($scope) {
    $scope.pageClass = 'indexPageClass';
}]);
/**
 * Created by laurent on 18/10/2014.
 */
angular.module('aroundev.translate', [
    'aroundev.service.auth',
    'pascalprecht.translate',
    'ngCookies'
]).controller('translateCtrl', ["$scope", "$translate", "$cookies", function($scope, $translate, $cookies) {
    $scope.en = false;
    $scope.fr = false;
    var currentLanguage = $cookies.NG_TRANSLATE_LANG_KEY;
    if(currentLanguage === '"en"'){
        $scope.en = true;
    }else if(currentLanguage === '"fr"'){
        $scope.fr = true;
    }else{
        $scope.en = true;
    }
    $scope.changeLanguage = function (langKey){
        $translate.use(langKey);
        $scope.en = false;
        $scope.fr = false;
        if(langKey === 'en'){
            $scope.en = true;
        }else if(langKey === 'fr'){
            $scope.fr = true;
        }else{
            $scope.en = true;
        }
    };
}]);
/**
 * Created by laurent on 19/10/2014.
 */
angular.module('aroundev.menu', [
    'aroundev.service.auth'
]).controller('menuCtrl', ["$scope", "authService", "$rootScope", function($scope, authService, $rootScope) {
    $scope.logged = false;

    $rootScope.$on ('user:logged', function (event, profil) {
        $scope.logged = true;
        $scope.username = profil.login;
    });

    $scope.logOut = function(){
        authService.logout();
    };
}]);
/**
 * Created by laurent on 19/10/2014.
 */
angular.module('aroundev.user', [
    'aroundev.service.auth',
    'pascalprecht.translate',
    'ngAnimate'
]).controller('userCtrl', ["$translate", "$scope", "authService", "$interval", "$location", "$rootScope", function($translate, $scope, authService, $interval, $location, $rootScope) {
    $scope.pageClass = 'loginPageClass';

    $scope.logIn = function(){
        $scope.progressBarLogin = true;
        $scope.progressBarValue = 20;

        authService.login($scope.login, $scope.password).then(function(result){
            $interval(function(){
                $scope.progressBarValue = 60;
                authService.getProfil().then(function(result){
                    $scope.progressBarValue = 100;
                    $scope.progressBarType = 'progress-bar-success';
                    $interval(function(){
                        toastr.success($translate.instant('LOGIN_LOG_IN_SUCCESS'));
                        $rootScope.$emit ('user:logged', result);
                        $location.path('/');
                        $interval(function(){
                            return $scope.resetProgressBar();
                        }, 500, 1);
                    }, 2000, 1);
                }, function(error){
                    toastr.error($translate.instant('COMMON_ERROR'));
                    $scope.progressBarType = 'progress-bar-danger';
                });
            }, 1000, 1);
        }, function(error){
            $interval(function(){
                toastr.error($translate.instant('LOGIN_LOG_IN_FAILED'));
                $scope.progressBarValue = 100;
                $scope.progressBarType = 'progress-bar-danger';
                $interval(function(){
                    return $scope.resetProgressBar();
                }, 4000, 1);
            }, 1000, 1);
        });
    };

    $scope.resetProgressBar = function(){
        $scope.progressBarLogin = false;
        $scope.progressBarValue = 0;
        $scope.progressBarType = '';
    };
}]);
/**
 * Created by laurent on 19/10/2014.
 */
angular.module('aroundev.service.auth', [
    'pascalprecht.translate',
    'restangular'
]).config(["RestangularProvider", function(RestangularProvider){
    RestangularProvider.setBaseUrl('/api/user/');
}]).service('authService',["$translate", "$http", "$location", "Restangular", "$q", function($translate, $http, $location, Restangular, $q){

    this.login = function(login,password){
        return $q(function(resolve, reject){
            var data = "login="+login+"&password="+password;
            $http.post('login', data, {
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                }
            }).
            success(function(data, status, headers, config) {
                //$location.path('/');
                //toastr.error($translate.instant(test.));
                //window.location.reload();
                resolve(true);
            }).
            error(function(data, status, headers, config){
                reject(false);
            });
        });

    };

    this.logout = function(){
        $http.get('logout')
            .success(function(data, status, headers, config){
                window.location.reload();
            }).error(function(data, status, headers, config){
                toastr.error($translate.instant('LOGIN_LOG_OUT_FAILED'));
            });
    };

    this.getProfil = function(){
        return $q(function(resolve, reject){
            Restangular.one('currentProfil').get().then(function(result){
                resolve(result);
            });
        });
    }

}]);