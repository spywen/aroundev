/**
 * Created by laurent on 18/10/2014.
 */
'use strict';

angular.module('aroundev', [
    'ngAnimate'
    ,'aroundev.translate'
    ,'aroundev.menu'
    ,'aroundev.index'
    ,'aroundev.user.login'
    ,'aroundev.service.security'
    ,'ngRoute'
])
.config(["$translateProvider", "$locationProvider", "$routeProvider", function($translateProvider, $locationProvider, $routeProvider){
    //Routing
    $routeProvider.otherwise({redirectTo: '/'});

    //Location
    $locationProvider.html5Mode(true);//Remove the '#' on the url

    //Translate
    $translateProvider.useStaticFilesLoader({
        prefix: '/app/js/modules/languages/json/',
        suffix: '.json'
    });
    $translateProvider.useCookieStorage();
    $translateProvider.preferredLanguage('en');
}])
.value('user', {value: ''})
.run(["authService", "securityService", "$location", "$rootScope", function(authService, securityService, $location, $rootScope){
    authService.getProfil().then(function(result){
        $rootScope.$emit ('user:logged', result);
        if(!securityService.hasRole('AUTHENTICATED')){
            $location.path('/login');
        }
    },function(){
        console.log('Person not connected');
    });
}]);
/**
 * Created by laurent on 19/10/2014.
 */
angular.module('aroundev.service.auth', [
    'pascalprecht.translate',
    'restangular'
])
.config(["RestangularProvider", function(RestangularProvider){
    //RestangularProvider.setBaseUrl('/api/user/');
}])
.service('authService',["$translate", "$http", "$location", "Restangular", "$q", "user", function($translate, $http, $location, Restangular, $q, user){

    this.login = function(login,password){
        return $q(function(resolve, reject){
            var data = {
                "login": login,
                "password": password
            };
            var dataEncoded = $.param(data);
            Restangular.one('login').customPOST(dataEncoded, undefined, undefined, {'Content-Type': 'application/x-www-form-urlencoded'}).then(function(){
                resolve(true);
            },function(){
                reject(false);
            });
        });
    };

    this.logout = function(){
        return $q(function(resolve, reject){
            Restangular.one('logout').get().then(function(){
                window.location.reload();
                resolve(result);
            }, function(){
                toastr.error($translate.instant('LOGIN_LOG_OUT_FAILED'));
                reject(false);
            });
        });
    };

    this.getProfil = function(){
        return $q(function(resolve, reject){
            Restangular.one('api/user/currentProfil').get().then(function(result){
                user.value = {username: result.login, roles:result.roles};
                resolve(result);
            },function(){
                reject(false);
            });
        });
    };

}]);
/**
 * Created by laurent on 24/10/14.
 */
angular.module('aroundev.service.security', [])
.service('securityService',["user", function(user){

    this.hasRole = function(role){
        return !!_.find(user.value.roles, { name : role });
    };

}]);
/**
 * Created by laurent on 19/10/2014.
 */
angular.module('aroundev.index', [
    'ngRoute'
])
.config(["$routeProvider", function($routeProvider){
    $routeProvider.when('/', {
        templateUrl: '/app/js/modules/index/view/index.html',
        controller: 'indexCtrl'
        //everybody allowed
    });
}])
.controller('indexCtrl', ["$scope", function($scope) {
    $scope.pageClass = 'indexPageClass';
}]);
/**
 * Created by laurent on 18/10/2014.
 */
angular.module('aroundev.translate', [
    'aroundev.service.auth',
    'pascalprecht.translate',
    'ngCookies'
]).controller('translateCtrl', ["$scope", "$translate", "$cookies", function($scope, $translate, $cookies) {
    $scope.en = false;
    $scope.fr = false;
    var currentLanguage = $cookies.NG_TRANSLATE_LANG_KEY;
    if(currentLanguage === '"en"'){
        $scope.en = true;
    }else if(currentLanguage === '"fr"'){
        $scope.fr = true;
    }else{
        $scope.en = true;
    }
    $scope.changeLanguage = function (langKey){
        $translate.use(langKey);
        $scope.en = false;
        $scope.fr = false;
        if(langKey === 'en'){
            $scope.en = true;
        }else if(langKey === 'fr'){
            $scope.fr = true;
        }else{
            $scope.en = true;
        }
    };
}]);
/**
 * Created by laurent on 19/10/2014.
 */
angular.module('aroundev.menu', [
    'aroundev.service.auth'
]).controller('menuCtrl', ["$scope", "authService", "$rootScope", function($scope, authService, $rootScope) {
    $scope.logged = false;

    $rootScope.$on ('user:logged', function (event, profil) {
        $scope.logged = true;
        $scope.username = profil.login;
    });

    $scope.logOut = function(){
        authService.logout();
    };
}]);
/**
 * Created by laurent on 19/10/2014.
 */
angular.module('aroundev.user.login', [
    'aroundev.service.auth'
    ,'aroundev.service.security'
    ,'pascalprecht.translate'
    ,'ngAnimate'
    ,'ngRoute'
])
.config(["$routeProvider", function($routeProvider){
    $routeProvider.when('/login', {
        templateUrl: '/app/js/modules/user/view/login.html',
        controller: 'loginCtrl'
    });
}])
.constant('localConfig', { connexionLatence : 1000 })
.run(["authService", "securityService", "$location", function(authService, securityService, $location){
    authService.getProfil().then(function(){
        if(securityService.hasRole('AUTHENTICATED')){
            console.log('Cannot access to the login page : already connected.');
            $location.path('/');
        }
    },function(){
        console.log('Person not connected');
    });
}])
.controller('loginCtrl', ["$translate", "$scope", "authService", "$interval", "$location", "$rootScope", "localConfig", function($translate, $scope, authService, $interval, $location, $rootScope, localConfig) {

    $scope.chrono;

    $scope.pageClass = 'loginPageClass';

    $scope.logIn = function(){
        $scope.progressBarLogin = true;
        $scope.progressBarValue = 20;

        $scope.chrono = $interval(function(){
            authService.login($scope.login, $scope.password).then(function(result){
                $scope.progressBarValue = 60;
                authService.getProfil().then(function(result){
                    $scope.progressBarValue = 100;
                    $scope.progressBarType = 'progress-bar-success';
                    $scope.chrono = $interval(function(){
                        toastr.success($translate.instant('LOGIN_LOG_IN_SUCCESS'));
                        $rootScope.$emit ('user:logged', result);
                        $location.path('/');
                        $scope.resetProgressBar();
                    }, localConfig.connexionLatence, 1);
                }, function(error){
                    toastr.error($translate.instant('COMMON_ERROR'));
                    $scope.progressBarType = 'progress-bar-danger';
                });
            }, function(error){
                    toastr.error($translate.instant('LOGIN_LOG_IN_FAILED'));
                    $scope.progressBarValue = 100;
                    $scope.progressBarType = 'progress-bar-danger';
                    $scope.chrono = $interval(function(){
                        return $scope.resetProgressBar();
                    }, 4000, 1);
            });
        }, localConfig.connexionLatence, 1);
    };

    $scope.resetProgressBar = function(){
        $scope.progressBarLogin = false;
        $scope.progressBarValue = 0;
        $scope.progressBarType = '';
    };

    $scope.loginCtrlFieldsUpdated = function(){
        $interval.cancel($scope.chrono);
        $scope.resetProgressBar();
    };
}]);

